package com.example.restservice.Test2;

import com.speedment.jpastreamer.field.BooleanField;
import com.speedment.jpastreamer.field.IntField;
import com.speedment.jpastreamer.field.ReferenceField;
import com.speedment.jpastreamer.field.StringField;
import com.speedment.jpastreamer.field.exception.IllegalJavaBeanException;

import java.util.List;

/**
 * The generated base for entity {@link Student} representing entities of the
 * {@code student}-table in the database.
 * <p> This file has been automatically generated by JPAStreamer.
 * 
 * @author JPAStreamer
 */
public final class Student$ {
    
    /**
     * This Field corresponds to the {@link Student} field id.
     */
    public static final IntField<Student> id = IntField.create(
        Student.class,
        "id",
        Student::getId,
        false
    );
    /**
     * This Field corresponds to the {@link Student} field payableFee.
     */
    public static final IntField<Student> payableFee = IntField.create(
        Student.class,
        "payableFee",
        Student::getPayableFee,
        false
    );
    /**
     * This Field corresponds to the {@link Student} field registrationStatus.
     */
    public static final BooleanField<Student> registrationStatus = BooleanField.create(
        Student.class,
        "registrationStatus",
        Student::isRegistrationStatus,
        false
    );
    /**
     * This Field corresponds to the {@link Student} field dueDate.
     */
    public static final StringField<Student> dueDate = StringField.create(
        Student.class,
        "dueDate",
        Student::getDueDate,
        false
    );
    /**
     * This Field corresponds to the {@link Student} field name.
     */
    public static final StringField<Student> name = StringField.create(
        Student.class,
        "name",
        Student::getName,
        false
    );
    /**
     * This Field corresponds to the {@link Student} field paymentStatus.
     */
    public static final BooleanField<Student> paymentStatus = BooleanField.create(
        Student.class,
        "paymentStatus",
        Student::isPaymentStatus,
        false
    );
    /**
     * This Field corresponds to the {@link Student} field requestDate.
     */
    public static final StringField<Student> requestDate = StringField.create(
        Student.class,
        "requestDate",
        Student::getRequestDate,
        false
    );
    /**
     * This Field corresponds to the {@link Student} field courses.
     */
    public static final ReferenceField<Student, List<Course>> courses = ReferenceField.create(
        Student.class,
        "courses",
        Student::getCourses,
        false
    );
    /**
     * This Field corresponds to the {@link Student} field phase.
     */
    public static final ReferenceField<Student, Phase> phase = ReferenceField.create(
        Student.class,
        "phase",
        Student::getPhase,
        false
    );
    /**
     * This Field corresponds to the {@link Student} field std_id.
     */
    public static final IntField<Student> std_id = IntField.create(
        Student.class,
        "std_id",
        student -> {throw new IllegalJavaBeanException(Student.class, "std_id");},
        false
    );
}